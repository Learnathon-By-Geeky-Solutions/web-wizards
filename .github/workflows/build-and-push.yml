name: Build and Push Docker Images

on:
  push:
    branches: [main, test, ci/cd-pipeline]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [main, test, ci/cd-pipeline]
  workflow_dispatch:  # Allow manual triggering

env:
  REGISTRY: ghcr.io
  ORGANIZATION: learnathon-by-geeky-solutions # using lowercase for Docker compatibility
  BACKEND_IMAGE: web-wizards-backend
  OCR_SERVICE_IMAGE: web-wizards-ocr-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate image tag
        id: set-tag
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "image_tag=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "Generated image tag: ${SHORT_SHA}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.BACKEND_IMAGE }}:${{ steps.set-tag.outputs.image_tag }}
            ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.BACKEND_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push OCR service image
        uses: docker/build-push-action@v4
        with:
          context: ./ocr_service
          file: ./ocr_service/Dockerfile.prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.OCR_SERVICE_IMAGE }}:${{ steps.set-tag.outputs.image_tag }}
            ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.OCR_SERVICE_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image Build Summary
        run: |
          echo "## Image Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Image | Registry | Tags | Status |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- | --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend | ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.BACKEND_IMAGE }} | ${{ steps.set-tag.outputs.image_tag }}, latest | ✅ Built & Pushed |" >> $GITHUB_STEP_SUMMARY
          echo "| OCR Service | ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.OCR_SERVICE_IMAGE }} | ${{ steps.set-tag.outputs.image_tag }}, latest | ✅ Built & Pushed |" >> $GITHUB_STEP_SUMMARY
          
      # Notify workflow run id for deploy-to-azure workflow to use
      - name: Add workflow run ID to step summary
        run: |
          echo "Workflow Run ID: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "This ID can be used by the deploy-to-azure workflow to identify this build."