name: Django Backend Migrations

on:
  push:
    branches:
      - django-migrations
    paths:
      - 'backend/*/migrations/**'
      - 'backend/*/models/**'
      - 'backend/*/models.py'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'backend/*/migrations/**'
      - 'backend/*/models/**'
      - 'backend/*/models.py'
  workflow_dispatch:  # Allow manual triggering

jobs:
  validate-migrations:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: web_wizards_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: './backend/requirements.txt'
      
      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Check migration conflicts
        working-directory: ./backend
        env:
          DATABASE_ENGINE: django.db.backends.mysql
          DATABASE_NAME: web_wizards_db
          DATABASE_USER: root
          DATABASE_PASSWORD: password
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: 3306
          SECRET_KEY: testing_key_for_ci
          DEBUG: True
        run: |
          # Create a graph of migration dependencies
          python manage.py showmigrations
          
          # Check for migration conflicts (exit with error if conflicts are found)
          python manage.py migrate --check --no-input
          
          # Run migrations to make sure they apply cleanly
          python manage.py migrate --no-input
      
      - name: Make migrations test
        if: github.event_name == 'pull_request'
        working-directory: ./backend
        env:
          DATABASE_ENGINE: django.db.backends.mysql
          DATABASE_NAME: web_wizards_db
          DATABASE_USER: root
          DATABASE_PASSWORD: password
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: 3306
          SECRET_KEY: testing_key_for_ci
          DEBUG: True
        run: |
          # Check if there are any missing migrations
          python manage.py makemigrations --check --dry-run