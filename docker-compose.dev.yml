version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"  # Directly expose Vite development server for easier debugging
    volumes:
      - ./frontend:/app  # Mount local code
      - /app/node_modules  # Avoid overwriting node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    stdin_open: true
    tty: true
    command: ["npm", "run", "dev", "--", "--host"]

  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"  # Directly expose Django server for easier debugging
    volumes:
      - ./backend:/app  # Mount local code
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: >
      sh -c "python /app/wait_for_db.py && 
             python manage.py migrate --no-input && 
             python manage.py runserver 0.0.0.0:8000"

  ocr_service:
    build:
      context: ./ocr_service
    ports:
      - "8001:8000"  # Map FastAPI OCR service to port 8001
    volumes:
      - ./ocr_service:/app  # Mount local code
    depends_on:
      - backend
      - db
    env_file:
      - .env
    command: python run.py

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"  # Map MySQL port
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx reverse proxy (optional for development - uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/conf.d:/etc/nginx/conf.d:ro
  #     - ./nginx/certs:/etc/nginx/certs:ro
  #   depends_on:
  #     - frontend
  #     - backend

volumes:
  db_data:  # Named volume for MySQL persistence
  redis_data:  # Named volume for Redis data