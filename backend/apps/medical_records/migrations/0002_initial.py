# Generated by Django 5.1.5 on 2025-04-15 16:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('medical_records', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='chart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='healthissue',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_issues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='health_issue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='medical_records.healthissue'),
        ),
        migrations.AddField(
            model_name='chart',
            name='health_issue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='charts', to='medical_records.healthissue'),
        ),
        migrations.AddField(
            model_name='labresult',
            name='health_issue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='medical_records.healthissue'),
        ),
        migrations.AddField(
            model_name='labresult',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='logbookentry',
            name='health_issue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logbook_entries', to='medical_records.healthissue'),
        ),
        migrations.AddField(
            model_name='logbookentry',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logbook_entries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='parametervalue',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='medical_records.parameterdefinition'),
        ),
        migrations.AddField(
            model_name='symptom',
            name='health_issue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='symptoms', to='medical_records.healthissue'),
        ),
        migrations.AddField(
            model_name='symptom',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symptoms', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testresult',
            name='lab_result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='medical_records.labresult'),
        ),
        migrations.AddField(
            model_name='parametervalue',
            name='test_result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameter_values', to='medical_records.testresult'),
        ),
        migrations.AddField(
            model_name='testresult',
            name='test_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='medical_records.testtype'),
        ),
        migrations.AddField(
            model_name='parameterdefinition',
            name='test_types',
            field=models.ManyToManyField(related_name='parameters', to='medical_records.testtype'),
        ),
    ]
